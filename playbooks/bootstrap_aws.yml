---
- name: Create AWS Resources
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    prefix: nginx
    owner: jrmorgan
    a_rg: "rg_{{ owner }}"
    state: "present"
    vm_state: "present"
    key_name: "{{ owner }}-lab"
    vpc_id: vpc-test
  tasks:

    - name: Create key
      ec2_key:
        name: "{{ key_name }}"
        region: us-east-1
        key_material: "{{ lookup('url', 'https://lab.int.shifti.us:10080/central/authorized_keys/raw/master/key-data.txt') }}"

    - name: Create a security group
      ec2_group:
        name: "sgp_{{ owner }}_{{ prefix }}"
        state: "{{ state }}"
        region: us-east-1
        description: Webservers security group
        vpc_id: "{{ vpc_id }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Create VPC Subnet
      ec2_vpc_subnet:
        state: "{{ state }}"
        cidr: 10.1.0.0/24
        region: us-east-1
        vpc_id: "{{ vpc_id }}"
        resource_tags:
          Name: "sbt_{{ owner }}_{{ prefix }}"
      register: ec2_subnet

    - name: Display Debug
      debug: 
        var: ec2_subnet

    - name: Create VPC IGW
      ec2_vpc_igw:
        region: us-east-1
        vpc_id: "{{ vpc_id }}"
        state: present
      register: igw

    - name: Create VPC Public Route Table
      ec2_vpc_route_table:
        region: us-east-1
        vpc_id: "{{ vpc_id }}"
        subnets:
          - "{{ ec2_subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        state: present


    - name: Launch EC2 instance
      ec2_instance:
        name: "aws-{{ prefix }}-{{owner}}"
        security_group: "sgp_{{ owner }}_{{ prefix }}"
        state: "{{ vm_state }}"
        key_name: "{{ key_name }}"
        wait: yes
        network:
          assign_public_ip: true
        vpc_subnet_id: "{{ ec2_subnet.subnet.id }}"
        instance_type: "t2.small"
        image_id: "ami-098bb5d92c8886ca1"
        region: us-east-1
      register: ec2_vm
        
    - name: Display Debug
      debug:
        var: ec2_vm

    - name: Add Host to Tower Group
      tower_host:
        name: "aws-{{ prefix }}"
        description: "AWS aws-{{ prefix }}"
        inventory: "Multicloud-Inventory"
        state: "{{ vm_state }}"
        enabled: yes
        tower_host: "https://tower.gxr.me:8443"
        tower_password: "{{ vc_password }}" 
        tower_verify_ssl: no  
        variables:
          ansible_host: "{{ item.public_ip_address }}"
          ansible_user: ec2-user
          ansible_python_interpreter: auto
      loop: "{{ ec2_vm.instances }}"
      when: vm_state == "present"

    - name: Remove from Tower Group
      tower_host:
        name: "aws-{{ prefix }}"
        description: "AWS aws-{{ prefix }}"
        inventory: "Multicloud-Inventory"
        state: "{{ vm_state }}"
        enabled: yes
        tower_host: "https://tower.gxr.me:8443"
        tower_password: "{{ vc_password }}"
        tower_verify_ssl: no
      when: vm_state == "absent"


